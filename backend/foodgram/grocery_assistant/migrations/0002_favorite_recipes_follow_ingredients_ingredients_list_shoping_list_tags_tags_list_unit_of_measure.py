# Generated by Django 3.2 on 2023-04-17 16:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('grocery_assistant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingr_name', models.CharField(db_index=True, max_length=256, verbose_name='Название ингридиента')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(db_index=True, max_length=256, verbose_name='Тег')),
                ('color', models.CharField(db_index=True, max_length=16, verbose_name='Цвет тега')),
                ('slug', models.SlugField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Unit_of_measure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(db_index=True, max_length=20, verbose_name='Единица измерения')),
            ],
        ),
        migrations.CreateModel(
            name='Tags_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipes_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grocery_assistant.recipes')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grocery_assistant.tags')),
            ],
        ),
        migrations.CreateModel(
            name='Shoping_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipes_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grocery_assistant.recipes')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredients_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingr_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grocery_assistant.ingredients')),
                ('recipes_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grocery_assistant.recipes')),
                ('unit_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grocery_assistant.unit_of_measure')),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Favorite_recipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipes_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grocery_assistant.recipes')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
